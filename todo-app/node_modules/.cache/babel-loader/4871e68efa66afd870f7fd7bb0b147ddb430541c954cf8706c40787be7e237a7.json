{"ast":null,"code":"var _jsxFileName = \"/home/vasyl-trefilov/Documents/websites/to_do_list/todo-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, ListGroup, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // FIND ALL\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/tasks\");\n        setTasks(response.data);\n      } catch (error) {\n        console.error(\"Ошибка при получении задач:\", error);\n        setError(\"Не удалось загрузить задачи\");\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // CREATE\n  const handleCreateTask = async () => {\n    if (!newTaskTitle) {\n      setError(\"Title can't be empty\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:4000/tasks\", {\n        title: newTaskTitle,\n        completed: isCompleted\n      });\n      setTasks(prevTasks => [...prevTasks, response.data]);\n      setIsCompleted(false);\n      setIsCreating(false);\n      setNewTaskTitle(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Can't create task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mb-4\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"d-flex align-items-center\",\n        in: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          className: \"me-2\",\n          checked: task.completed,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), task.title]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mb-3\",\n      onClick: () => setIsCreating(!isCreating),\n      children: isCreating ? \"Stop Creating Task\" : \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isCreating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        className: \"mb-2\",\n        value: newTaskTitle,\n        onChange: e => setNewTaskTitle(e.target.value),\n        placeholder: \"Write task title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Completed\",\n        className: \"mb-2\",\n        checked: isCompleted,\n        onChange: () => setIsCompleted(!isCompleted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleCreateTask,\n        children: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZBZkCyDMCuz64rXI1Y7SKC62xe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Button","Container","ListGroup","Form","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","error","setError","isCreating","setIsCreating","newTaskTitle","setNewTaskTitle","isCompleted","setIsCompleted","fetchTasks","response","get","data","console","handleCreateTask","post","title","completed","prevTasks","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","task","Item","in","Check","type","checked","readOnly","_id","variant","onClick","Control","value","onChange","e","target","placeholder","label","_c","$RefreshReg$"],"sources":["/home/vasyl-trefilov/Documents/websites/to_do_list/todo-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Task } from \"./taskInterface\";\n\nimport { Button, Container, ListGroup, Form } from \"react-bootstrap\";\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n  const [newTaskTitle, setNewTaskTitle] = useState<string>(\"\");\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\n\n  // FIND ALL\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/tasks\");\n        setTasks(response.data);\n      } catch (error) {\n        console.error(\"Ошибка при получении задач:\", error);\n        setError(\"Не удалось загрузить задачи\");\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  // CREATE\n  const handleCreateTask = async () => {\n    if (!newTaskTitle) {\n      setError(\"Title can't be empty\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:4000/tasks\", {\n        title: newTaskTitle,\n        completed: isCompleted,\n      });\n      setTasks((prevTasks) => [...prevTasks, response.data]);\n      setIsCompleted(false);\n      setIsCreating(false);\n      setNewTaskTitle(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Can't create task\");\n    }\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <h1>Tasks list</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <ListGroup className=\"mb-4\">\n        {tasks.map((task) => (\n          <ListGroup.Item key={task._id} className=\"d-flex align-items-center\"\n          in\n          >\n            <Form.Check\n              type=\"checkbox\"\n              className=\"me-2\"\n              checked={task.completed}\n              readOnly\n            />\n            {task.title}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n\n      <Button\n        variant=\"primary\"\n        className=\"mb-3\"\n        onClick={() => setIsCreating(!isCreating)}\n      >\n        {isCreating ? \"Stop Creating Task\" : \"Create Task\"}\n      </Button>\n\n      {isCreating && (\n        <div className=\"mb-3\">\n          <Form.Control\n            type=\"text\"\n            className=\"mb-2\"\n            value={newTaskTitle}\n            onChange={(e) => setNewTaskTitle(e.target.value)}\n            placeholder=\"Write task title\"\n          />\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Completed\"\n            className=\"mb-2\"\n            checked={isCompleted}\n            onChange={() => setIsCompleted(!isCompleted)}\n          />\n          <Button variant=\"success\" onClick={handleCreateTask}>\n            Save Task\n          </Button>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}