{"ast":null,"code":"var _jsxFileName = \"/home/vasyl-trefilov/Documents/websites/to_do_list/todo-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Импорт интерфейса\n\nconst App = () => {\n  _s();\n  // Состояние для списка задач\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Изучить TypeScript\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"Попрактиковаться с React\",\n    completed: true\n  }]);\n\n  // Функция для переключения состояния выполнения задачи\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => toggleTask(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), task.title, \" \", task.completed ? \"(выполнено)\" : \"(не выполнено)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9FU/gzwep+aOVwj0gLViVlK3m2M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","title","completed","toggleTask","map","task","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/home/vasyl-trefilov/Documents/websites/to_do_list/todo-app/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Task } from \"./models/Task\"; // Импорт интерфейса\n\nconst App: React.FC = () => {\n  // Состояние для списка задач\n  const [tasks, setTasks] = useState<Task[]>([\n    { id: 1, title: \"Изучить TypeScript\", completed: false },\n    { id: 2, title: \"Попрактиковаться с React\", completed: true },\n  ]);\n\n  // Функция для переключения состояния выполнения задачи\n  const toggleTask = (id: number) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n\n  return (\n    <div>\n      <h1>Список задач</h1>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => toggleTask(task.id)}\n              />\n              {task.title} {task.completed ? \"(выполнено)\" : \"(не выполнено)\"}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACF;;AAEtC,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,CACzC;IAAEO,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACxD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,0BAA0B;IAAEC,SAAS,EAAE;EAAK,CAAC,CAC9D,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAIH,EAAU,IAAK;IACjCD,QAAQ,CACND,KAAK,CAACM,GAAG,CAAEC,IAAI,IACbA,IAAI,CAACL,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGK,IAAI;MAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;IAAU,CAAC,GAAGG,IAC7D,CACF,CAAC;EACH,CAAC;EAGD,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAW,QAAA,EACGR,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACdV,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,gBACEX,OAAA;YACEgB,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEP,IAAI,CAACH,SAAU;YACxBW,QAAQ,EAAEA,CAAA,KAAMV,UAAU,CAACE,IAAI,CAACL,EAAE;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,EACDL,IAAI,CAACJ,KAAK,EAAC,GAAC,EAACI,IAAI,CAACH,SAAS,GAAG,aAAa,GAAG,gBAAgB;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D;MAAC,GARDL,IAAI,CAACL,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CApCID,GAAa;AAAAkB,EAAA,GAAblB,GAAa;AAsCnB,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}